{
  "$schema": "https://biomejs.dev/schemas/2.1.1/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "ignoreUnknown": false,
    "includes": ["**", "!**/docs/**"]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 100,
    "lineEnding": "lf"
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "correctness": {
        "noUnusedImports": "error",
        "noUnusedVariables": "error",
        "useExhaustiveDependencies": "error",
        "useHookAtTopLevel": "error"
      },
      "style": {
        "noNonNullAssertion": "off",
        "useImportType": "error",
        "useNodejsImportProtocol": "off",
        "useAsConstAssertion": "error",
        "useBlockStatements": "error",
        "useFilenamingConvention": {
          "level": "error",
          "options": {
            "filenameCases": ["camelCase"],
            "strictCase": true,
            "requireAscii": true
          }
        },
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": true,
            "conventions": [
              {
                "selector": {
                  "kind": "function"
                },
                "formats": ["camelCase"]
              },
              {
                "selector": {
                  "kind": "const",
                  "scope": "global"
                },
                "formats": ["CONSTANT_CASE", "camelCase"]
              },
              {
                "selector": {
                  "kind": "typeLike"
                },
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "objectLiteralProperty"
                },
                "match": ".*",
                "formats": []
              }
            ]
          }
        }
      },
      "suspicious": {
        "noExplicitAny": "error",
        "noImplicitAnyLet": "error"
      },
      "complexity": {
        "noBannedTypes": "error",
        "useArrowFunction": "error"
      },
      "performance": {
        "noBarrelFile": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "double",
      "jsxQuoteStyle": "double",
      "semicolons": "always",
      "trailingCommas": "all",
      "arrowParentheses": "asNeeded"
    }
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": "on"
      }
    }
  },
  "overrides": [
    {
      "includes": ["e2e/**/*.spec.ts"],
      "linter": {
        "rules": {
          "style": {
            "useFilenamingConvention": {
              "level": "error",
              "options": {
                "filenameCases": ["kebab-case"],
                "strictCase": true,
                "requireAscii": true
              }
            }
          }
        }
      }
    },
    {
      "includes": ["entrypoints/**/*.tsx"],
      "linter": {
        "rules": {
          "style": {
            "useFilenamingConvention": {
              "level": "error",
              "options": {
                "filenameCases": ["PascalCase"],
                "strictCase": true,
                "requireAscii": true
              }
            },
            "useNamingConvention": {
              "level": "error",
              "options": {
                "strictCase": true,
                "conventions": [
                  {
                    "selector": {
                      "kind": "function"
                    },
                    "formats": ["PascalCase"]
                  },
                  {
                    "selector": {
                      "kind": "const",
                      "scope": "global"
                    },
                    "formats": ["PascalCase"]
                  },
                  {
                    "selector": {
                      "kind": "typeLike"
                    },
                    "formats": ["PascalCase"]
                  },
                  {
                    "selector": {
                      "kind": "objectLiteralProperty"
                    },
                    "match": ".*",
                    "formats": []
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["entrypoints/**/main.tsx", "entrypoints/**/index.tsx"],
      "linter": {
        "rules": {
          "style": {
            "useFilenamingConvention": {
              "level": "error",
              "options": {
                "filenameCases": ["camelCase"],
                "strictCase": true,
                "requireAscii": true
              }
            }
          }
        }
      }
    },
    {
      "includes": ["e2e/fixtures.ts"],
      "linter": {
        "rules": {
          "style": {
            "useNamingConvention": {
              "level": "error",
              "options": {
                "strictCase": false,
                "conventions": [
                  {
                    "selector": {
                      "kind": "const",
                      "scope": "global"
                    },
                    "formats": ["camelCase"]
                  }
                ]
              }
            }
          }
        }
      }
    }
  ]
}
